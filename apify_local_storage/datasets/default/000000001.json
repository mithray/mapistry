{
  "url": "https://www.html5rocks.com/en/tutorials/casestudies/box_dnd_download/",
  "html": "<!DOCTYPE html>\n\n\n\n\n<html lang=\"en\" dir=\"ltr\" itemscope itemtype=\"http://schema.org/Article\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta property=\"twitter:account_id\" content=\"1593210261\" />\n  <!-- Copyright (c) 2012 Google Inc.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   * Author: David Tong - davidtwtong@gmail.com\n   *\n   * \n   *\n  -->\n  <title>Case Study: Drag and Drop Download in Chrome - HTML5 Rocks</title>\n  <meta name=\"description\" content=\"Learn how Box.net implemented GMail&#39;s attachment drag and drop to the desktop.\">\n  <meta name=\"keywords\" content=\"html5,html 5,html5 demos,html5 examples,javascript,css3,notifications,geolocation,web workers,apppcache,file api,filereader,indexeddb,offline,audio,video,drag and drop,chrome,sse,mobile\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0\">\n  <meta name=\"theme-color\" content=\"#f04530\">\n  <link rel=\"shortcut icon\" href=\"/favicon.ico\">\n  <link rel=\"alternate\" type=\"application/rss+xml\" title=\"HTML5 Rocks RSS\" href=\"http://feeds.feedburner.com/html5rocks\">\n  <meta name=\"google-site-verification\" content=\"E1HOIDkksrWY5npenL8FeQhKn4Ujctd75iO2lfufSyA\" />\n  <meta itemprop=\"name\" content=\"Case Study: Drag and Drop Download in Chrome - HTML5 Rocks\">\n  <meta itemprop=\"description\" content=\"Learn how Box.net implemented GMail&#39;s attachment drag and drop to the desktop.\">\n  \n  <meta itemprop=\"image\" content=\"https://www.html5rocks.com/static/images/html5rocks-logo-wings.png\">\n  \n\n  \n    \n  <link rel=\"canonical\" href=\"https://www.html5rocks.com/tutorials/casestudies/box_dnd_download/\">  \n    \n  \n\n  \n  <meta name=\"twitter:card\" content=\"summary\">\n  <meta name=\"twitter:site\" content=\"@ChromiumDev\">\n  <meta name=\"twitter:creator\" content=\"@davidalism\">\n\n  <meta property=\"og:type\" content=\"article\">\n  <meta property=\"og:title\" content=\"Case Study: Drag and Drop Download in Chrome - HTML5 Rocks\">\n  <meta property=\"og:url\" content=\"https://www.html5rocks.com/en/tutorials/casestudies/box_dnd_download/\">\n  <meta property=\"og:description\" content=\"Learn how Box.net implemented GMail&#39;s attachment drag and drop to the desktop.\">\n  <meta property=\"og:image\" content=\"https://www.html5rocks.com/static/images/profiles/davidtong.png\">\n  <meta property=\"og:site_name\" content=\"HTML5 Rocks - A resource for open web HTML5 developers\">\n  \n\n  \n  <link rel=\"author\" href=\"https://www.google.com/profiles/davidtwtong\">\n  \n  \n  <link rel=\"publisher\" href=\"https://plus.google.com/+GoogleChromeDevelopers\">\n\n  \n\n  \n    \n    <link rel=\"stylesheet\" media=\"all\" href=\"/static/css/v2-combined.min.css?20131111\">\n    \n\n    \n  \n\n  <link href=\"//fonts.googleapis.com/css?family=Open+Sans:300,400,400italic,600,800|Source+Code+Pro\" rel=\"stylesheet\">\n\n  <link rel=\"apple-touch-icon\" href=\"/static/images/identity/HTML5_Badge_64.png\">\n  <link rel=\"apple-touch-icon-precomposed\" href=\"/static/images/identity/HTML5_Badge_64.png\">\n\n  <script src=\"/static/js/modernizr.custom.82437.js\"></script>\n\n  <!--[if lt IE 9]>\n  <script src=\"http://html5shim.googlecode.com/svn/trunk/html5-els.js\"></script>\n  <![endif]-->\n\n  \n<style>\nfigure img { border: 1px solid #ccc; }\n</style>\n\n</head>\n<body data-href=\"tutorials-casestudies-box_dnd_download\" onload=\"\" class=\"article tutorial\">\n\n  <header class=\"main\" id=\"siteheader\">\n    <h1 id=\"title\">\n      <a href=\"/en/\" title=\"HTML5 Rocks\">HTML5 Rocks</a>\n    </h1>\n    <a href=\"#sitenav\" id=\"navtoggle\">Show navigation</a>\n\n    \n    <a id=\"toctoggle\" href=\"#toc\">Table of Contents</a>\n    \n\n    <nav id=\"sitenav\">\n      <ul>\n        \n        <li id=\"home_menu\"><a href=\"/en/\" class=\"home\">Home</a></li>\n        \n        <li id=\"tutorials_menu\"><a href=\"/en/tutorials/?page=1\" class=\"tutorials\">Tutorials</a></li>\n        <li id=\"updates_menu\"><a href=\"https://developers.google.com/web/updates/\" class=\"updates\">Updates</a></li>\n      </ul>\n    </nav>\n\n    \n    <nav class=\"toc\" id=\"toc\">\n      <h1>Table of Contents</h1>\n\n      <ul><li><a href='#toc-introduction'>Introduction</a></li><li><a href='#toc-check-for-support'>Check for Drag and Drop API Support</a></li><li><a href='#toc-interarion1'>Iteration 1</a></li><li><a href='#toc-interarion2'>Iteration 2</a></li><li><a href='#toc-interarion2'>Iteration 3</a></li><li><a href='#toc-future'>Thoughts, and future improvements</a></li><li><a href='#toc-references'>References</a></li></ul>\n\n      <h1 class=\"visible-title\">Localizations:</h1>\n      <ul>\n        \n          <li><a href=\"https://github.com/html5rocks/www.html5rocks.com/blob/master/CONTRIBUTING.md\">Contribute one</a></li>\n        \n      </ul>\n    </nav>\n    \n  </header>\n\n  <div class=\"body-content\">\n    \n\n  <section class=\"title\">\n\n    \n\n    <section class=\"title-text container\">\n      \n      <h1>Case Study: Drag and Drop Download in Chrome</h1>\n      \n      \n\n      <a href=\"/en/\" class=\"watermark\">HTML5 Rocks</a>\n    </section>\n  </section>\n\n  <article class=\"content-wrapper\">\n\n    <section class=\"container\">\n\n      \n\n      <div class=\"article-meta\" id=\"article-meta\">\n        <nav class=\"toc\">\n          <h1>Table of Contents</h1>\n\n          <ul><li><a href='#toc-introduction'>Introduction</a></li><li><a href='#toc-check-for-support'>Check for Drag and Drop API Support</a></li><li><a href='#toc-interarion1'>Iteration 1</a></li><li><a href='#toc-interarion2'>Iteration 2</a></li><li><a href='#toc-interarion2'>Iteration 3</a></li><li><a href='#toc-future'>Thoughts, and future improvements</a></li><li><a href='#toc-references'>References</a></li></ul>\n        </nav>\n\n        <aside class=\"localizations\">\n          <h1>Localizations</h1>\n          <ul>\n            \n              <li><a href=\"https://github.com/html5rocks/www.html5rocks.com/blob/master/CONTRIBUTING.md\">Contribute one</a></li>\n            \n          </ul>\n        </aside>\n      </div>\n      \n\n      <div class=\"content\" id=\"article-content\">\n\n        <section class=\"byline\">\n\n          <div class=\"byline-content\">\n            \n            <section class=\"author-images\">\n              <a href=\"/profiles/#davidtong\">\n                <img src=\"/static/images/profiles/davidtong.png\" itemprop=\"photo\" alt=\"David Tong\" title=\"David Tong\">\n              </a>\n\n              \n            </section>\n\n            <section class=\"meta\">\n              <div class=\"authors\">\n                <strong>By</strong> <a href=\"/profiles/#davidtong\">David Tong</a>\n                \n              </div>\n\n              \n\n              <div class=\"date\">\n                <time pubdate><strong>Published:</strong> September 25th, 2010</time>\n                \n                <span><strong>Comments:</strong> <a href=\"#disqus_thread\" class=\"load-comments\" data-disqus-identifier=\"https://www.html5rocks.com/tutorials/casestudies/box_dnd_download.html\">0</a></span>\n              </div>\n\n              <div id=\"notcompatible\" class=\"hidden\">\n                Your browser may not support the functionality in this article.\n              </div>\n            </section>\n            <div class=\"clear\"></div>\n\n            \n          </div>\n        </section>\n\n        \n\n  <h2 id=\"toc-introduction\">Introduction</h2>\n \n  <p>Drag and Drop (DnD) is one of the many great features of HTML 5, and it is supported in Firefox 3.5, Safari, Chrome and IE.\n  Google recently rolled out a <a href=\"http://gmailblog.blogspot.com/2010/08/drag-and-drop-attachments-to-save-them.html\">new feature</a>\n  that allows Google Chrome users to drag and drop files from the browser to the desktop.\n  It is an extremely convenient feature, but it was not widely known until Ryan Seddon posted an article on\n  the <a href=\"http://www.thecssninja.com/javascript/gmail-dragout\">discoveries</a> of his reverse engineering on this new feature.</p>\n\n  <p>At Box.net, we are very excited about how these new capabilities are enabling us to improve\n  our cloud content management solution, as well as contribute more to the developer community.\n  I am pleased to announce that DnD Download has been integrated into our product.\n  Now, Box users can drag files directly from a Chrome browser to their desktop to download and save the file.</p>\n\n  <p>I would like to share how I went through several iterations during the development of this new feature.</p>\n\n  <h2 id=\"toc-check-for-support\">Check for Drag and Drop API Support</h2>\n\n  <p>The first thing to do is check that your browser fully supports HTML5 drag and drop.\n  An easy way to do that is use a library called <a href=\"http://www.modernizr.com/\">Modernizr</a> \n  to check for a certain feature:</p>\n\n  <pre class=\"prettyprint\">\nif (Modernizr.draganddrop) {\n  // Browser supports native HTML5 DnD.\n} else {\n  // Fallback to a library solution.\n}\n</pre> \n\n  <h2 id=\"toc-interarion1\">Iteration 1</h2>\n\n  <p>I first tried the approach that Seddon found in Gmail. I added a new attribute\n  called &#8216;data-downloadurl&#8217; to anchor links of files. This process uses HTML5&#8217;s\n  <a href=\"http://ejohn.org/blog/html-5-data-attributes/\">custom data attributes</a>.\n  In data-downloadurl, you need to include the MIME type of the file, the destination file name\n  (the desired file name of the downloaded file), and the download URL of the file.\n  Thus, this is added to the HTML template:</p>\n\n  <pre class=\"prettyprint\">&lt;a href=\"#\" class=\"dnd\"\n   data-downloadurl=\"{$item.mime}:{$item.filename}:{$item.url}\"&gt;&lt;/a&gt;</pre>\n\n  <p>which would create an output like the following:</p>\n\n  <pre class=\"prettyprint\">&lt;a href=\"#\" class=\"dnd\" data-downloadurl=\n  \"image/jpeg:Penguins.jpg:https://www.box.net/box_download_file?file_id=f66690\"&gt;&lt;/a&gt;</pre>\n\n  <p>Based on a jQuery <a href=\"http://dev.blog.salesking.eu/coding/jquery-plugin-to-drag-files-from-browser-onto-desktop/\">plugin</a>\n  that von Schorsch created, which is based on Seddon&#8217;s article,\n  I added a jQuery plugin that does a bit of browser feature detection.\n  Highlighted are the lines that I added to von Schorsch&#8217;s version:</p>\n\n<pre class=\"prettyprint\">(function($) {\n\n$.fn.extend({\n  dragout: function() {\n    var files = this;\n    if (files.length > 0) {\n      $(files).each(function() {\n        var url = (this.dataset && this.dataset.downloadurl) ||\n                   this.getAttribute(\"data-downloadurl\");\n        if (this.addEventListener) {\n          this.addEventListener(\"dragstart\", function(e) {\n            if (e.dataTransfer && e.dataTransfer.constructor == Clipboard &&\n                e.dataTransfer.setData('DownloadURL', 'http://www.box.net')) {\n              e.dataTransfer.setData(\"DownloadURL\", url);\n            }\n          },false);\n        }\n      });\n    }\n  }\n});\n\n})(jQuery);\n</pre>\n\n  <p>The reason I did this is because without prior browser detection, doing addEventListener()\n  to a HTML element in IE will create a JavaScript error because IE uses its own attachEvent() method.\n  e.dataTransfer is undefined in IE (as of now), e.dataTransfer.constructor returns DataTransfer\n  in Firefox (Mozilla), while Webkit browsers (Chrome and Safari) implements the Clipboard constructor.\n  In Safari, e.dataTransfer.setData('DownloadURL','http://www.box.net') returns false, and Chrome returns\n  true for this statement. Doing all of the tests mentioned above leave the feature only available to Chrome.\n  You may argue that I could simply do the following:</p>\n\n  <pre class=\"prettyprint\">/chrome/.test( navigator.userAgent.toLowerCase() )</pre>\n\n  <p>But I prefer feature detection to browser detection, though this technically does not detect that DnD download will work.</p>\n\n  <h3 id=\"toc-problems-of-interation1\">Problems of iteration 1</h3>\n\n  <p>1) Because we currently have on-page DnD enabled for moving/copying files between folders,\n  we need a way to distinguish DnD Download and on-page DnD. Technically, we cannot combine these\n  two actions. We cannot predict whether the user wants to move a file to another folder within\n  the Box.net account or drag it to their desktop. These two actions are completely different.\n  Moreover, there is no easy way to detect if the cursor is outside the browser window.\n  You could use window.onmouseout (IE) and document.onmouseout (other browsers) to attach mouseout\n  event to the document, and check if e.relatedTarget.nodeName == &#8220;HTML&#8221; (e is the mouseout event\n  or window.event, whichever is available). But this is quite difficult due to event bubbling.\n  The event may trigger randomly when you are over an image or layer, especially in a complex web app like Box.net.</p>\n\n  <p>2) We want the user to explicitly do something to prevent them from dragging something out\n  to the desktop by mistake. Potentially, an editor of a Box folder can upload an executable file\n  that does something undesirable on the computer of whoever downloads it. We want the user to know\n  exactly when a file would be downloaded to the desktop.</p>\n\n  <h2 id=\"toc-interarion2\">Iteration 2</h2>\n\n  <p>We decided to experiment with control + drag (dragging a file when the Windows Ctrl key is pressed).\n  This action is consistent with what people can do on a Windows desktop to duplicate a file.\n  It also requires extra work (but not an extra step) from the user to prevent files from downloaded by mistake.</p>\n\n  <p>The jQuery plugin in iteration 1 is abandoned now because we need to tightly integrate DnD Download\n  with the on-page DnD. For those who are interested, we use a modified version of jQuery UI&#8217;s\n  <a href=\"http://jqueryui.com/demos/draggable/\">Draggable plugin</a>.\n  Inside the mousedown event of a target element, we put the following code:</p>\n\n  <pre class=\"prettyprint\">// DnD to desktop when the Ctrl key is pressed while dragging\nif (e.ctrlKey) {\n  var that = $(e.target);\n  // make sure it is not IE (attachEvent).\n  if (that[0].addEventListener) {\n      that[0].addEventListener(\"dragstart\",function(e) {\n         // e.dataTransfer in Firefox uses the DataTransfer constructor\n         // instead of Clipboard\n         // make sure it's Chrome and not Safari (both webkit-based).\n         // setData on DownloadURL returns true on Chrome, and false on Safari\n         if (e.dataTransfer && e.dataTransfer.constructor == Clipboard &&\n             e.dataTransfer.setData('DownloadURL','http://www.box.net')) {\n           var url = (this.dataset && this.dataset.downloadurl) ||\n                      this.getAttribute(\"data-downloadurl\");\n           e.dataTransfer.setData(\"DownloadURL\", url);\n         }\n      }, false);\n      return;\n  }\n}</pre>\n\n  <p>Other than enabling the Ctrl key, we also added a little toaster tooltip,\n  which shows up when the user performs a regular on-page drag. It tells the user\n  that files can be downloaded if the file icon is dragged to the desktop\n  while the Ctrl key is being held.</p>\n\n  <h3 id=\"toc-problems-of-interation2\">Problems of iteration 2</h3>\n\n  <p>Due to security concerns, Box.net does not expose permanent URLs to directly access\n  static files. This is not unique to Box.net. Any online storage service should not\n  expose permanent URLs without an extra layer of security to check if the file is public\n  and whether the intended download is requested by a user with appropriate permissions.</p>\n\n  <p>When following the &#8220;download URL&#8221; (e.g. https://www.box.net/box_download_file?file_id=f_60466690)\n  of an item, it returns a &#8220;302 Found&#8221; status code, and redirects to a random URL\n  (e.g. https://www.box.net/dl/6045?a=1f1207a084&m=168299,11211&t=2&b=aca15820d924e3b) that is the temporary\n  &#8220;actual URL&#8221; of the file. The challenge is that it expires every few minutes, and so placing it in\n  the HTML output is impractical. It could return &#8220;404&#8221; when the user tries to download the file\n  at the link in the HTML output generated several minutes ago.</p>\n\n  <p>DnD Download only works on actual URLs that point directly to a resource.\n  If redirection is involved, it is currently not smart enough to follow the chain\n  (and it should never follow the chain due to security). Therefore, although the\n  link <a href=\"https://www.box.net/box_download_file?file_id=f_60466690\">https://www.box.net/box_download_file?file_id=f_60466690</a> from above would let you download the file when you enter it in the browser location bar, it would not work with DnD.</p>\n\n  <p>To better illustrate the differences between an &#8220;actual URL&#8221; and a &#8220;redirect URL&#8221;, see the screenshots:</p>\n  \n  <figure class=\"center\">\n    <img src=\"/static/images/screenshots/casestudies/box/redirect-url.png\" style=\"max-width: 100%\" title=\"302 redirect URL\" alt=\"302 redirect URL\" />\n    <figcaption>302 redirect URL</figcaption>\n  </figure>\n  \n  <figure class=\"center\">\n    <img src=\"/static/images/screenshots/casestudies/box/actual-url.png\" style=\"max-width: 100%\" title=\"Actual URL\" alt=\"Actual URL\" />\n    <figcaption>Actual URL</figcaption>\n  </figure>\n\n  <h2 id=\"toc-interarion2\">Iteration 3</h2>\n\n  <p>Let&#8217;s try Ajax.</p>\n\n  <p>We slightly modified the code in the previous iteration and came up with the following:</p>\n  <pre class=\"prettyprint\">// DnD to desktop when the Ctrl key is pressed while dragging\nif (e.ctrlKey) {\n  var that = $(e.target);\n  // make sure it is not IE (attachEvent).\n  if (that[0].addEventListener) {\n    that[0].addEventListener(\"dragstart\", function(e) {\n      // e.dataTransfer in Firefox uses the DataTransfer constructor\n      // instead of Clipboard\n      // make sure it's Chrome and not Safari (both webkit-based).\n      // setData on DownloadURL returns true on Chrome, and false on Safari\n      if (e.dataTransfer && e.dataTransfer.constructor == Clipboard &&\n          e.dataTransfer.setData('DownloadURL', 'http://www.box.net')) {\n        var url = (this.dataset && this.dataset.downloadurl) ||\n                   this.getAttribute(\"data-downloadurl\");\n        $.ajax({\n          complete: function(data) {\n            e.dataTransfer.setData(\"DownloadURL\", data.responseText);\n          },\n          type:'GET',\n          url: url\n        });\n      }\n    }, false);\n    return;\n  }\n}</pre>\n\n  <p>This makes sense. Upon dragstart, it immediately makes an Ajax call to the server to\n  retrieve the latest download URL of the file. However, it does not work.</p>\n\n  <p>It turns out that it needs to be a synchronous call (or as I like to call it, Sjax).\n  Seems like setData has to be done at the time when the event listener is attached.\n  According to jQuery&#8217;s API, the highlighted lines become:</p>\n\n<pre class=\"prettyprint\">\n$.ajax({\n  async: false,\n  complete: function(data) {\n    e.dataTransfer.setData(\"DownloadURL\", data.responseText);\n  },\n  type: 'GET',\n  url: url\n});</pre>\n\n  <p>And it works fine... until I unplugged the network connection. Because it does\n  a synchronous call, the browser freezes until the call is successful.\n  If the Ajax call fails (404, or if it does not respond at all), the browser would not\n  defrost at all as if it had crashed.</p>\n\n  <p>It is much safer to do something like the following:</p>\n\n<pre class=\"prettyprint\">\n$.ajax({\n  async: false,\n  complete: function(data) {\n    e.dataTransfer.setData(\"DownloadURL\", data.responseText);\n  },\n  error: function(xhr) {\n    if (xhr.status == 404) {\n      xhr.abort();\n    }\n  },\n  type: 'GET',\n  timeout: 3000,\n  url: url\n});</pre>\n\n\n  <p>For a demo of this feature, feel free to upload a static file to a Box.net account.\n  Drag the file icon out to your desktop while holding the Ctrl key. If you do not have an account,\n  it literally takes less than 30 seconds to create one.</p>\n\n  <p>With this feature, you can be creative and make a lot of things possible.\n  Dragging an image to a Windows printer dialog will immediately have the image printed.\n  You can copy a song from Box to your mobile phone&#8217;s drive, drag a file from Box\n  to your IM client in order to transfer it directly to your friend...\n  This opens up endless possibilities to increase your productivity.</p>\n\n  <figure class=\"center\">\n    <img src=\"/static/images/screenshots/casestudies/box/drag-file-to-printer.png\" style=\"max-width: 100%\" title=\"Dragging a file to the printer\" alt=\"Dragging a file to the printer\" />\n    <figcaption>Dragging a file to the printer.</figcaption>\n  </figure>\n\n  <figure class=\"center\">\n    <img src=\"/static/images/screenshots/casestudies/box/drag-file-to-skype.png\" style=\"max-width: 100%\" title=\"Dragging a file to IM client\" alt=\"Dragging a file to IM client\" />\n    <figcaption>Dragging a file to IM client.</figcaption>\n  </figure>\n\n  <h2 id=\"toc-future\">Thoughts, and future improvements</h2>\n\n  <p>This is still less than ideal, as a synchronous call could lock up the browser\n  for a brief moment. The HTML 5 Web Worker does not help either, as a Web Worker has\n  to be asynchronous. It does seem like setData has to be done at the time when\n  the event listener is attached.</p>\n\n  <p>In reality, the performance is pretty acceptable. The synchronous Ajax (Sjax)\n  call merely retrieves an URL string, which should be pretty fast. It does come with big\n  overhead in the HTTP header, which can possibly be addressed by WebSockets.\n  However, until we see more usage of this kind of technology, it is not worth using WebSockets\n  to send every little update down to the client.</p>\n\n  <p>I also hope that the capability of multi-file download will be added to the API\n  in the future. Combined with custom checkboxes to select multiple files on the user\n  interface, this would be incredible. Furthermore, it would be even nicer if client-generated files,\n  such as text files generated from the result of a form submitted, can be downloaded in this way.</p>\n \n  <ul>\n    <li>Column dnd</li> \n    <li>Rearrange list</li>\n    <li>Creating an image gallery</li> \n    <li>Exporting a canvas image</li> \n  </ul> \n \n  <h2 id=\"toc-references\">References</h2> \n  <ul> \n    <li><a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd\">Drag and Drop</a> specification</li> \n  </ul> \n\n      </div>\n    </section>\n  </article>\n\n  \n  <section class=\"disqus pattern-bg-lighter\">\n\n    <div id=\"disqus\" class=\"container\">\n\n      <h2>Comments</h2>\n\n      <div id=\"disqus_thread\">\n\n        <a href=\"#disqus_thread\" class=\"load-comments\" data-disqus-identifier=\"https://www.html5rocks.com/tutorials/casestudies/box_dnd_download.html\">0</a>\n\n      </div>\n    </div>\n\n    <noscript>\n      <p class=\"center\">\n        <strong>\n          <a href=\"https://disqus.com/?ref_noscript\">Please enable JavaScript to view the comments powered by Disqus.</a>\n        </strong>\n      </p>\n    </noscript>\n\n    <script>\n\n      var disqus_shortname = 'html5rocks';\n      var disqus_identifier = 'https://www.html5rocks.com/tutorials/casestudies/box_dnd_download.html';\n      var disqus_url = 'https://www.html5rocks.com/tutorials/casestudies/box_dnd_download.html';\n      var disqus_developer = 0;\n\n      var disqus_config = function () {\n        var funky_language_code_mapping = {\n          'de': 'de_inf',\n          'es': 'es_ES',\n          'pt': 'pt_EU',\n          'sr': 'sr_CYRL',\n          'sv': 'sv_SE',\n          'zh': 'zh_HANT'\n        };\n        this.language = funky_language_code_mapping['en'] ||\n                        'en';\n\n        this.callbacks.onReady = [ function () {\n                                      try {\n                                        ga('send', 'event', 'View comments');\n                                      } catch(err){}\n                                   } ];\n        this.callbacks.onNewComment = [ function (comment) {\n                                          try {\n                                            ga('send', 'event', 'Commented');\n                                          } catch(err){}\n                                        } ];\n      };\n\n      window.addEventListener('load', function(e) {\n\n        var c = document.createElement('script');\n        c.type = 'text/javascript';\n        c.src = 'https://' + disqus_shortname + '.disqus.com/count.js';\n        c.async = true;\n\n        var s = document.getElementsByTagName('script')[0], sp = s.parentNode;\n        sp.insertBefore(c, s);\n\n        if (window.location.hash === '#disqus_thread')\n          loadComments();\n\n      }, false);\n\n      var disqus_loaded = false;\n      function loadComments() {\n\n        if (disqus_loaded)\n          return;\n\n        disqus_loaded = true;\n\n        ga('send', 'event', 'Interactions', 'Comments', 'Comments Loaded');\n\n        var s = document.getElementsByTagName('script')[0], sp = s.parentNode;\n        var dsq = document.createElement('script');\n        dsq.type = 'text/javascript';\n        dsq.async = true;\n\n        var disqusContainer = document.getElementById('disqus');\n        disqusContainer.classList.add('active');\n\n        dsq.src = 'https://' + disqus_shortname + '.disqus.com/embed.js';\n        sp.insertBefore(dsq, s);\n      }\n\n      function outgoing(url) {\n        try {\n          ga('send', 'event', 'Outbound Links' , url);\n        } catch(err){}\n      }\n      // Open external links (also that don't have a target defined) in a new tab.\n      var externLinks = document.querySelectorAll('article.tutorial a[href^=\"http\"]:not([target])');\n      for(var i = 0, a; a = externLinks[i]; ++i) {\n        a.target = '_blank';\n        a.addEventListener('click', new Function('outgoing(' + '\"' + a.href.replace(/.*?:\\/\\//g, \"\") + '\"' + ');'));\n      }\n\n      var loadCommentsButtons = document.querySelectorAll('.load-comments');\n      for(var l = 0; l < loadCommentsButtons.length; l++)\n        loadCommentsButtons[l].addEventListener('click', loadComments);\n\n    </script>\n  </section>\n  \n\n  <footer>\n    <div class=\"container\">\n\n      \n        <h1>Next steps</h2>\n\n        \n\n        <aside class=\"panel share\">\n          <h2>Share</h2>\n          <style>\n            aside.share.native .android { display: inline-block !important;\n            background-image: url(https://storage.googleapis.com/material-icons/external-assets/v4/icons/svg/ic_share_white_36px.svg) !important;\n            background-size: 48px 48px !important;\n             background-position: 0, 0 !important; }\n          </style>\n          <a href=\"https://twitter.com/share?url=https://www.html5rocks.com/tutorials/casestudies/box_dnd_download.html&text=Case Study: Drag and Drop Download in Chrome&lang=en&via=ChromiumDev&related=ChromiumDev\" class=\"android\" style=\"display: none;\">Share</a>\n          <a href=\"https://twitter.com/share?url=https://www.html5rocks.com/tutorials/casestudies/box_dnd_download.html&text=Case Study: Drag and Drop Download in Chrome&lang=en&via=ChromiumDev&related=ChromiumDev\" class=\"twitter\" target=\"_blank\">Twitter</a>\n          <a href=\"https://www.facebook.com/sharer/sharer.php?u=https://www.html5rocks.com/tutorials/casestudies/box_dnd_download.html\" class=\"facebook\" target=\"_blank\">Facebook</a>\n          <a href=\"https://plus.google.com/share?url=https://www.html5rocks.com/tutorials/casestudies/box_dnd_download.html\" class=\"gplus\" onclick=\"javascript:window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;\">Google+</a>\n        </aside>\n\n        <aside class=\"panel rss\">\n          <h2>Subscribe</h2>\n          <p>Enjoyed this article? Grab the <a href=\"http://feeds.feedburner.com/html5rocks\">RSS feed</a> and stay up-to-date.</p>\n        </aside>\n\n      \n\n      <p class=\"licensing\">\n      \n        Except as otherwise <a href=\"http://code.google.com/policies.html#restrictions\">noted</a>, the content of this page is licensed under the <a href=\"http://creativecommons.org/licenses/by/3.0/\">Creative Commons Attribution 3.0 License</a>, and code samples are licensed under the <a href=\"http://www.apache.org/licenses/LICENSE-2.0\">Apache 2.0 License</a>.\n      \n      </p>\n\n    </div>\n  </footer>\n\n  <script>\n    window.isCompatible = function() {\n      \nreturn Modernizr.draganddrop;\n\n    };\n    \n    if(navigator.share !== undefined) {\n    document.addEventListener('DOMContentLoaded', e => {\n      var shareBox = document.querySelector('aside.share');\n      if(shareBox !== undefined) { shareBox.classList.toggle('native'); }\n      \n      var shareBtn = document.querySelector('aside.share a.android');\n      shareBtn.addEventListener('click', clickEvent => {\n        clickEvent.preventDefault();\n        const title = \"Case Study: Drag and Drop Download in Chrome\";\n        const url = \"https://www.html5rocks.com/tutorials/casestudies/box_dnd_download.html\";\n        navigator.share({title: title, text: url, url: url})\n          .then(() => console.log('Successful share'),\n           error => console.log('Error sharing:', error));\n      });\n    });\n}\n\n    if (isCompatible() === false) {\n      document.getElementById('notcompatible').className = '';\n    }\n\n    function _prettyPrint() {\n      if (typeof customPrettyPrintLanguage != 'undefined') {\n        customPrettyPrintLanguage();\n      }\n      prettyPrint();\n    }\n  </script>\n  <script async src=\"/static/js/prettify.min.js\" onload=\"_prettyPrint()\"></script>\n  <!-- Google Tag Manager -->\n<noscript><iframe src=\"//www.googletagmanager.com/ns.html?id=GTM-XXXX\"\nheight=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\nnew Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\nj=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n})(window,document,'script','dataLayer','GTM-MB3LRF');</script>\n<!-- End Google Tag Manager -->\n\n\n  </div>\n\n  <script>\n  (function() {\n\n    // Kill feedburner and marketing tracking arguments, but let them register\n    // before we do it.\n    setTimeout(function() {\n      if (/^\\?utm_/.test(document.location.search) &&\n          window.history.replaceState) {\n        window.history.replaceState(\n            {}, '', document.location.href.replace(/\\?utm_.*/, ''));\n      }\n    }, 2000);\n\n    var siteHeader = document.getElementById('siteheader');\n    var navToggle = document.getElementById('navtoggle');\n    var siteNav = document.getElementById('sitenav');\n\n    function toggle(target, forceActive) {\n\n      if (typeof toc !== 'undefined') {\n        // Switch off whichever one is not the\n        // current target\n        if (target === toc)\n          siteNav.classList.remove('active');\n        else\n          toc.classList.remove('active');\n      }\n\n      // Toggle if no force parameter is set\n      if (typeof forceActive === 'undefined') {\n        target.classList.toggle('active');\n      } else {\n        if (forceActive)\n          target.classList.add('active');\n        else\n          target.classList.remove('active');\n      }\n\n      // now find out what the set state ended up being\n      var isActive = target.classList.contains('active');\n\n      if (isActive)\n        siteHeader.classList.add('expanded');\n      else\n        siteHeader.classList.remove('expanded');\n\n    }\n\n    navToggle.addEventListener('click', function(e) {\n      toggle(siteNav);\n      e.preventDefault();\n    });\n\n    \n\n    var tocToggle = document.getElementById('toctoggle');\n    var toc = document.getElementById('toc');\n    var articleMeta = document.getElementById('article-meta');\n    var articleContent = document.getElementById('article-content');\n    var articleMetaHeight = 0;\n    var articleMetaMaxY = 0;\n    var articleMetaMinY = 0;\n    var articleContentPadding = 200;\n\n    var tocLinks = document.querySelectorAll('.toc a');\n    for (var t = 0; t < tocLinks.length; t++)\n      tocLinks[t].addEventListener('click', onTocLinkClick);\n\n    tocToggle.addEventListener('click', function(e) {\n      toggle(toc);\n      e.preventDefault();\n    });\n\n    toc.addEventListener('click', function(e) {\n      if (e.target !== siteNav)\n        toggle(toc, false);\n    });\n\n    function onTocLinkClick() {\n      ga('send', 'event', 'Interactions', 'TOC', 'TOC Clicked');\n    }\n\n    function setMinScrollYFromMetaY() {\n      var scrollPosition = window.scrollY;\n\n      var articleMetaBounds = articleMeta.getBoundingClientRect();\n      var articleMetaTop = Math.max(352,\n          articleMetaBounds.top - 20 + scrollPosition);\n\n      articleMetaHeight = articleMetaBounds.bottom - articleMetaBounds.top;\n      articleMetaMinY = articleMetaTop;\n    }\n\n    function setMaxScrollYFromContentHeight() {\n\n      var scrollPosition = window.scrollY;\n\n      var articleContentBounds = articleContent.getBoundingClientRect();\n      var articleContentTop = articleContentBounds.top + scrollPosition;\n      var articleContentHeight = articleContentBounds.bottom - articleContentBounds.top;\n\n      articleMetaMaxY = articleContentTop +\n          articleContentHeight -\n          articleMetaHeight -\n          articleContentPadding;\n\n    }\n\n    function onScroll(e) {\n\n      if (window.scrollY >= articleMetaMinY) {\n\n        articleMeta.classList.add('sticky');\n\n        var articleMetaTop = 22 - Math.max(0, window.scrollY - articleMetaMaxY);\n        articleMeta.style.top = articleMetaTop + 'px';\n\n      } else {\n        articleMeta.classList.remove('sticky');\n        articleMeta.style.top = 'auto';\n      }\n    }\n\n    if (articleMeta.getBoundingClientRect) {\n      setMinScrollYFromMetaY();\n      setMaxScrollYFromContentHeight();\n      document.addEventListener('scroll', onScroll);\n      window.addEventListener('load', setMaxScrollYFromContentHeight, false);\n    }\n\n    \n  })();\n  </script>\n  <script>\n  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n  ga('create', 'UA-15028909-1', 'auto');\n  ga('create', 'UA-49880327-4', 'auto', {'name': 'html5rocks'});\n\n  ga('send', 'pageview');\n  ga('html5rocks.send', 'pageview');\n\n  </script>\n   <!-- Google Tag Manager -->\n<noscript><iframe src=\"//www.googletagmanager.com/ns.html?id=GTM-XXXX\"\nheight=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\nnew Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\nj=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n})(window,document,'script','dataLayer','GTM-MB3LRF');</script>\n<!-- End Google Tag Manager -->\n</body>\n</html>\n"
}